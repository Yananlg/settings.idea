<application>
  <component name="AppStorage">
    <histories>
      <item value="ITERATIONS" />
      <item value="a fully-qualified class name." />
      <item value="Returns the interfaces implemented by this service provider" />
      <item value="Creates a new auxiliary resource file for writing and returns a file object for it. The file may be located along with the newly created source files, newly created binary files, or other supported location. The locations {@link StandardLocation#CLASS_OUTPUT CLASS_OUTPUT} and {@link StandardLocation#SOURCE_OUTPUT SOURCE_OUTPUT} must be supported. The resource may be named relative to some package (as are source and class files), and from there by a relative pathname. In a loose sense, the full pathname of the new file will be the concatenation of {@code location}, {@code pkg}, and {@code relativeName}." />
      <item value="Creates a new source file and returns an object to allow writing to it. The file's name and path (relative to the {@linkplain StandardLocation#SOURCE_OUTPUT root output location for source files}) are based on the type to be declared in that file. If more than one type is being declared, the name of the principal top-level type (the public one, for example) should be used. A source file can also be created to hold information about a package, including package annotations. To create a source file for a named package, have {@code name} be the package's name followed by {@code &quot;.package-info&quot;}; to create a source file for an unnamed package, use {@code &quot;package-info&quot;}." />
      <item value="Returns an implementation of some utility methods for operating on types." />
      <item value="Returns the messager used to report errors, warnings, and other notices." />
      <item value="Returns the processor-specific options passed to the annotation processing tool. Options are returned in the form of a map from option name to option value. For an option with no value, the corresponding value in the map is {@code null}." />
      <item value="Returns the filer used to create new source, class, or auxiliary files." />
      <item value="Returns an implementation of some utility methods for operating on elements" />
      <item value="Determines the interfaces implemented by the class or interface represented by this object." />
      <item value="xlsPrefix + fileName" />
      <item value="description" />
      <item value="The string representation of the expected value for the properties. If not specified, the property must &lt;strong&gt;not&lt;/strong&gt; be equal to {@code false}." />
      <item value="since Shiro 1.1. Hash salting is now expected to be based on if the {@link AuthenticationInfo} returned from the {@code Realm} is a {@link SaltedAuthenticationInfo} instance and its {@link org.apache.shiro.authc.SaltedAuthenticationInfo#getCredentialsSalt() getCredentialsSalt()} method returns a non-null value. This method and the 1.0 behavior still exists for backwards compatibility if the {@code Realm} does not return {@code SaltedAuthenticationInfo} instances, but &lt;b&gt;it is highly recommended that {@code Realm} implementations that support hashed credentials start returning {@link SaltedAuthenticationInfo SaltedAuthenticationInfo} instances as soon as possible&lt;/b&gt;." />
      <item value="This is because salts should always be obtained from the stored account information and never be interpreted based on user/Subject-entered data. User-entered data is easier to compromise for attackers, whereas account-unique (and secure randomly-generated) salts never disseminated to the end-user are almost impossible to break. This method will be removed in Shiro 2.0." />
      <item value="A value of {@code true} will cause this class to decode the system credential from Hex, a value of {@code false} will cause this class to decode the system credential from Base64." />
      <item value="Sets the indicator if this system's stored credential hash is Hex encoded or not." />
      <item value="should never execute because this implementation relies on parent class to access cache, which //is where all sessions reside - it is the cache implementation that determines if the //cache is memory only or disk-persistent, etc." />
      <item value="Prepends the prefix to the start of the string if the string does not already start with any of the prefixes." />
      <item value="similar" />
      <item value="alpha-numeric" />
      <item value="Alphabetic" />
      <item value="Return the class that declares the underlying Method or Constructor." />
      <item value="purposes" />
      <item value="Create AOP advice for method validation purposes, to be applied with a pointcut for the specified 'validated' annotation. @param validator the JSR-303 Validator to delegate to @return the interceptor to use (typically, but not necessarily, a {@link MethodValidationInterceptor} or subclass thereof)" />
      <item value="Set the JSR-303 Validator to delegate to for validating methods. Default is the default ValidatorFactory's default Validator. /" />
      <item value="Set the 'validated' annotation type. The default validated annotation type is the {@link Validated} annotation. This setter property exists so that developers can provide their own (non-Spring-specific) annotation type to indicate that a class is supposed to be validated in the sense of applying method validation." />
      <item value="View or views that annotated element is part of. Views are identified by classes, and use expected class inheritance relationship: child views contain all elements parent views have, for example." />
      <item value="which would specify that property annotated would be included when processing (serializing, deserializing) View identified by &lt;code&gt;BasicView.class&lt;/code&gt; (or its sub-class). If multiple View class identifiers are included, property will be part of all of them." />
      <item value="Annotation used for indicating view(s) that the property that is defined by method or field annotated is part of." />
      <item value="that is defined by method or field annotated is part of" />
      <item value="Annotation used for indicating view(s) that the property&#10;   that is defined by method or field annotated is part of." />
      <item value="maximum number of fractional digits accepted for this number" />
      <item value="maximum number of integral digits accepted for this number" />
      <item value="condition" />
      <item value="instance" />
      <item value="individual" />
      <item value="Set the Caffeine to use for building each individual&#10;&#9;   {@link CaffeineCache} instance." />
      <item value="Specify whether to accept and convert {@code null} values for all caches&#10;&#9;   in this cache manager.&#10;&#9;    Default is &quot;true&quot;, despite Caffeine itself not supporting {@code null} values.&#10;&#9;   An internal holder object will be used to store user-level {@code null}s." />
      <item value="/  &#10;&#9;   Specify whether to accept and convert {@code null} values for all caches&#10;&#9;   in this cache manager.&#10;&#9;    Default is &quot;true&quot;, despite Caffeine itself not supporting {@code null} values.&#10;&#9;   An internal holder object will be used to store user-level {@code null}s.&#10;&#9;  /" />
      <item value="accept" />
      <item value="to" />
      <item value="Specify whether to accept and convert {@code null} values for all caches in this cache manager." />
      <item value="distributed" />
      <item value="can access the protected client endpoints" />
      <item value="These two are needed so that the server" />
      <item value="Note that while some implementations of {@code InputStream} will return the total number of bytes in the stream, many will not. It is never correct to use the return value of this method to allocate a buffer intended to hold all data in this stream." />
      <item value="Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream. The next invocation might be the same thread or another thread. A single read or skip of this many bytes will not block, but may read or skip fewer bytes." />
      <item value="Return the name of the parameter in the multipart form. @return the name of the parameter (never {@code null} or empty)" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="121" />
        <entry key="ENGLISH" value="122" />
        <entry key="GERMAN" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20190222000270023" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="foldOriginal" value="true" />
    <option name="ignoreRegExp" value="[\*]|(&lt;p&gt;)" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Source Code Pro" />
    <option name="primaryFontFamily" value="Microsoft YaHei" />
    <option name="translator" value="fanyi.baidu" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="0b9675ec9310c20e" />
      </youdao-translate>
    </option>
  </component>
</application>